name: Linting of pull requests

on:
  pull_request:
    paths:
      - '**.py'
      - '**.cpp'
      - '**.hpp'
      - '**.h'
      - 'scripts/tvm_cli/Dockerfile.amd64'
      - 'scripts/tvm_cli/Dockerfile.arm64'
      - '**.sh'

jobs:
  python-lint:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
     - name: Checkout
       uses: actions/checkout@v2

     - name: Linting
       run: |
         sudo apt-get update
         sudo apt-get install -y python3-pip
         pip install pylint
         find . -name "*.py" | xargs pylint \
           --disable=import-error \
           --disable=invalid-name \
           --disable=missing-module-docstring \
           --disable=redefined-builtin \
           --disable=too-many-locals \
           --disable=too-many-statements \
           --disable=broad-except \
           --disable=consider-using-sys-exit

  cpp-lint:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Linting
        run: |
          sudo apt-get update
          sudo apt-get install -y cppcheck
          cppcheck --enable=all --suppress=missingIncludeSystem .

  dockerfile-lint:
    runs-on: ubuntu-latest
    continue-on-error: true

    container:
      image: hadolint/hadolint:latest-debian

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Linting
        run: |
          hadolint scripts/tvm_cli/Dockerfile.amd64
          hadolint scripts/tvm_cli/Dockerfile.arm64

  shell-lint:
    runs-on: ubuntu-latest
    continue-on-error: true

    container:
      image: koalaman/shellcheck-alpine

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Linting
        run: |
          find . -name "*.sh" -print0 | xargs -0 shellcheck --shell=bash
        shell: sh
